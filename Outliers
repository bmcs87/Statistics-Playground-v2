# EDIT LOCATION FILE SAVED HERE (example: "C:/Users/resmi/Documents")
setwd("C:/LOCATION SAVED")

# Call your dataset
dataset <- read.delim("dataset.txt", quote = "")
attach(dataset)

#UPDATE THE X & Y AXIS NAMES; PLEASE REMEMBER TO ADD A PERIOD '.' BETWEEN AXIS NAME SPACE ("NonBrand.Clicks") & AXIS NAMES ARE CASE SENSITIVE ("NonBrand.Clicks" is different from "nonbrand.clicks")
x <- dataset$X AXIS NAME
y <- dataset$Y AXIS NAME

#INPUT YOUR X & Y AXIS NAMES - MAKE SURE TO KEEP THE NAME IN QUOTES!!  This code will rename your columns.
colnames(dataset)[colnames(dataset) %in% c("X AXIS NAME", "Y AXIS NAME")] <- c("x", "y")

#Install and call packages
pkgs <- c("tidyverse", "data.table", "outliers", "janitor", "rlang", "lubridate", "parsedate")
install.packages(pkgs, repos = "http://cran.us.r-project.org")
library(tidyverse)
library(data.table)
library(outliers)
library(janitor)
library(rlang)
library(lubridate)
library(parsedate)

#Add Row Number to see which outlier rows are being removed
dataset <- tibble::rowid_to_column(dataset, "ID")

#Clean names which gives names are unique and consist only of the _ character, numbers, and letters.
data<-janitor::clean_names(dataset)

#Outlier function 
outlier_function<-function(data_frame, column, outlier_label_column) {
  column<-enquo(column)
  outlier_label_column <- enquo(outlier_label_column)
  data_frame %>% 
    mutate(!!outlier_label_column:= scores(!!column,type="z", prob=0.95))
}

######X-Axis
#Outliers on X-Axis; Outlier label column creates a new column with the outliers labeled
dataset <-outlier_function(data_frame = dataset, column = x, 
    outlier_label_column = x.outlier)
  
  
#Output of X-Outlier
x.outlier <- (filter(dataset, x.outlier==TRUE))
  
#Name X-Outlier
x.id.outlier <- which(dataset$x.outlier == TRUE, arr.ind=TRUE)

#Remove X-Outlier
dataset <- dataset[-c(x.id.outlier),]

######Y-Axis
#Outliers on Y-Axis; Outlier label column creates a new column with the outliers labeled
dataset <-outlier_function(data_frame = dataset, column = y, 
    outlier_label_column = y.outlier)
  
#Output of Y-Outlier
y.outlier <- (filter(dataset, y.outlier==TRUE))
  
#Name Y-Outlier
y.id.outlier <- which(dataset$y.outlier == TRUE, arr.ind=TRUE)

#Remove Y-Outlier & Close the If / Else Statement
dataset <- dataset[-c(y.id.outlier),]

  
#New Plot with Outliers Removed
plot(dataset$y ~ dataset$x)

#List of Outliers Removed
#Print list of outliers â€“ only works in R; not PBI
print(x.outlier)
print(y.outlier)

#Place Summary Statistics Here
#Summary statistics for linear model with outliers removed - only works in R; not PBI
summary(lm(y ~ x))

#Print New Transformed Dataset
#Print new dataset out - only works in R itself; not PBI
options(max.print = .Machine$integer.max)
print(dataset)
